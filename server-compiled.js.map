{"version":3,"sources":["server.js"],"names":[],"mappings":"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","file":"server-compiled.js","sourcesContent":["//server.js\r\n'use strict';\r\n//first we import our dependenciesâ€¦\r\nvar express = require('express');\r\nvar mongoose = require('mongoose');\r\nvar bodyParser = require('body-parser');\r\nvar Data = require('./model/data');\r\n//and create our instances\r\nvar app = express();\r\nvar router = express.Router();\r\n//set our port to either a predetermined port number if you have set \r\n//it up, or 3001\r\nvar port = process.env.API_PORT || 3001;\r\n//now we should configure the API to use bodyParser and look for \r\n//JSON data in the request body\r\napp.use(bodyParser.urlencoded({extended: true}));\r\napp.use(bodyParser.json());\r\nmongoose.connect('mongodb://127.0.0.1:27017/mydb');\r\n//To prevent errors from Cross Origin Resource Sharing, we will set \r\n//our headers to allow CORS with middleware like so:\r\napp.use(function (req, res, next) {\r\n    res.setHeader('Access-Control-Allow-Origin', '*');\r\n    res.setHeader('Access-Control-Allow-Credentials', 'true');\r\n    res.setHeader('Access-Control-Allow-Methods', 'GET,HEAD,OPTIONS,POST,PUT,DELETE');\r\n    res.setHeader('Access-Control-Allow-Headers', 'Access-Control-Allow-Headers, Origin,Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers');\r\n//and remove cacheing so we get the most recent comments\r\n    res.setHeader('Cache-Control', 'no-cache');\r\n    next();\r\n});\r\n//now we can set the route path & initialize the API\r\nrouter.get('/', function (req, res) {\r\n    res.json({message: 'API Initialized!'});\r\n});\r\n//adding the /comments route to our /api router\r\nrouter.route('/data')\r\n//retrieve all comments from the database\r\n    .get(function (req, res) {\r\n        //looks at our Comment Schema\r\n        var id = req.query.id;\r\n        var t = null;\r\n        //console.log(\"id=\"+id);\r\n        if (id) {\r\n            Data.find({_id: id}, function (err, authordata) {\r\n                if (err)\r\n                    res.send(err);\r\n                res.json(authordata)\r\n            });\r\n        } else {\r\n            Data.find({}, function (err, authordata) {\r\n                if (err)\r\n                    res.send(err);\r\n                res.json(authordata)\r\n            });\r\n        }\r\n\r\n\r\n    })\r\n    //post new comment to the database\r\n    .post(function (req, res) {\r\n        var data = new Data();\r\n        //body parser lets us use the req.body\r\n        data.id = req.body.id;\r\n        data.firstName = req.body.firstName;\r\n        data.lastName = req.body.lastName;\r\n        data.age = req.body.age;\r\n        data.save(function (err) {\r\n            if (err)\r\n                res.send(err);\r\n            res.json({message: 'Data successfully added!'});\r\n        });\r\n    })\r\n    .put(function(req,res){\r\n\t        Data.findOneAndUpdate({\"_id\":req.query.id},{$set:{\"firstName\":req.body.firstName,\"lastName\":req.body.lastName,\"age\":req.body.age}}, { new: true },function (err,data) {\r\n\t            if(err)\r\n\t            {\r\n\t                res.send(err);\r\n\t            }else{\r\n\t            \tres.send(\"Author data updated\");\r\n\t            }\r\n\t        })\r\n\t \r\n    })\r\n    .delete(function(req,res){\r\n\t        Data.remove({\"_id\":req.query.id},function (err,data) {\r\n\t            if(err)\r\n\t            {\r\n\t                res.send(err);\r\n\t            }else{\r\n\t            \tres.send(\"Author data deleted\");\r\n\t            }\r\n\t            \r\n\t            \r\n\t        })\r\n\t \r\n    });\r\n\r\n//Use our router configuration when we call /api\r\napp.use('/api', router);\r\n//starts the server and listens for requests\r\napp.listen(port, function () {\r\n    console.log('api running on port :' + port);\r\n});\r\n"]}